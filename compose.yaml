services:
  #docker exec -it overarching_dab_postgresql_database psql -U username database
  database:
    container_name: overarching_dab_postgresql_database
    image: postgres:17.0
    restart: unless-stopped
    env_file:
      - project.env
    command: >
      postgres
      -c shared_preload_libraries=auto_explain,pg_stat_statements
      -c auto_explain.log_min_duration=10

  database-migrations:
    image: flyway/flyway:10
    env_file:
      - project.env
    depends_on:
      - database
    volumes:
      - ./database-migrations:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate

  server:
    build: server
    restart: unless-stopped
    volumes:
      - ./server:/app
    env_file:
      - project.env
    depends_on:
      - database
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-router.entrypoints=web"
      - "traefik.http.routers.server-router.rule=PathPrefix(`/api`)"
      - "traefik.http.services.server-service.loadbalancer.server.port=8000"

  grader:
    build: grader
    ports:
      - 8001:8000 # host:container
    restart: unless-stopped
    volumes:
      - ./grader:/app
    env_file:
      - project.env
    depends_on:
      - database
      - redis

  redis:
    image: redis:7.4.2
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf

  client:
    build: client
    restart: unless-stopped
    volumes:
      - ./client:/app
    depends_on:
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client-router.entrypoints=web"
      - "traefik.http.routers.client-router.rule=PathPrefix(`/`)"
      - "traefik.http.services.client-service.loadbalancer.server.port=4321"

  # Traffic distribution and load balancing
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:8000"
    ports:
      - "8080:8080"
      - "8000:8000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
